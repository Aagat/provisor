#!/usr/bin/python

import os
import sys
import textwrap
from provisor import Provisor
from provisor.utils import getch, validate_pubkey

SUDO_USER = os.environ.get('SUDO_USER')

if not SUDO_USER:
    exit("This script is designed to be run with sudo")

p = Provisor()

ldap_user = p.get_user(SUDO_USER)

user = {
    'name': ldap_user.setdefault('commonName',['Unknown'])[0],
    'login': ldap_user['uid'][0],
    'shell': ldap_user['loginShell'][0],
    'host': ldap_user['host'][0],
    'email': ldap_user['mailRoutingAddress'][0],
    'pubkeys': ldap_user['sshPublicKey'],
}

def main_menu():
    print("\nUser Details:\n")
    print("  Login : %s" % user['login'])
    print("  Host  : %s" % user['host'])
    print("  Name  : %s" % user['name'])
    print("  Email : %s" % user['email'])
    print("  Shell : %s" % user['shell'])
    print("  SSH Public Keys:")
    for key in user['pubkeys']:
        print(textwrap.fill(
            "%s. %s" % (user['pubkeys'].index(key),key),
            width=74,
            initial_indent='    ',
            subsequent_indent='       '
        ))
    print("\nActions:\n")
    print("  1 - Change Name")
    print("  2 - Change Email")
    print("  3 - Change Shell")
    print("  4 - Add SSH Public Key")
    print("  5 - Delete SSH Public Key")
    print("  6 - Exit\n")
    sys.stdout.write('> ')
 
main_menu()

while True:
 
    key = getch()

    if ord(key) == 3: # <Ctrl+C>
        break;

    if key == '\r': # <Enter>
        main_menu()

    if int(key) >= 1 and int(key) <=6:
        print("%s\n" % key)

    if key == '1':
        user['name'] = raw_input("Enter new name: ")
        main_menu()

    if key == '2':
        user['email'] = raw_input("Enter new Email: ")
        main_menu()

    if key == '3':
        user['shell'] = raw_input("Enter new shell, eg /bin/bash:")
        main_menu()

    if key == '4':
        pubkey = raw_input("Paste SSH Public Key to be added:\n")
        valid_pubkey = False;
        try:
            validate_pubkey(pubkey)
            valid_pubkey = True
        except:
            print('\nSupplied Public Key is invalid.')

        if valid_pubkey:
            print('\nPublic Key accepted.')
            user['pubkeys'].append(pubkey)
                
    if key == '5':
        if (len(user['pubkeys']) == 0):
            print('\nThere are no SSH Public Keys to delete')
            break;
        print('Press the number of the key you wish to delete')
        sys.stdout.write('\n> ')
        delkey = getch()
        if delkey == '\r': # <Enter>
            main_menu()
        if int(delkey) >= 0 and int(delkey) <= len(user['pubkeys']):
            print(delkey)
            del user['pubkeys'][int(delkey)]
            print('\nKey Deleted: %s' % delkey)
            main_menu()

    if key == '6':
        break;
