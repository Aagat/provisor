#!/usr/bin/python

import os
from provisor import Provisor
from provisor.utils import getch, validate_pubkey

if os.geteuid() != 0 or not os.environ.get('SUDO_USER'):
    exit("This script is designed to be run with sudo")

# temp mock user
user = {
    'name': 'John Doe',
    'shell': '/bin/bash',
    'login': os.environ.get('SUDO_USER') or os.environ.get('USER'),
    'email': 'user@example.com',
    'pubkeys': {'comment1':'somekey1','comment2':'somekey2'}
}

key = 0

def main_menu():
    print('')
    print("User Details:")
    print("Login: %s" % user['login'])
    print("Name: %s" % user['name'])
    print("Email: %s" % user['email'])
    print("Shell: %s" % user['shell'])
    print("SSH Keys: %s" % ",".join(user['pubkeys'].keys()))
    print('')
    print("Actions:")
    print("1 - Change Name")
    print("2 - Change Email")
    print("3 - Change Shell")
    print("4 - View SSH Public Keys")
    print("5 - Add SSH Public Keys")
    print("6 - Delete SSH Public Key")
    print("7 - Exit")
    print('')
 
main_menu()

while True:
 
    key = getch()

    if ord(key) == 3: # <Ctrl+C>
        break;

    if key == '\r': # <Enter>
        main_menu()

    if key == '1':
        user['name'] = raw_input("Enter new name: ")
        main_menu()

    if key == '2':
        user['email'] = raw_input("Enter new Email: ")
        main_menu()

    if key == '3':
        user['shell'] = raw_input("Enter new shell, eg /bin/bash:")
        main_menu()

    if key == '4':
        for comment,pubkey in user['pubkeys'].iteritems():
            print('Comment: %s' % comment)
            print('Text: %s' % pubkey)
            print('')
        print('Press [Enter] To Continue')
    
    if key == '5':
        pubkey = raw_input("Paste SSH Public Key to be added:\n")
        print('pubkey',pubkey)
        valid_pubkey = False;
        try:
            validate_pubkey(pubkey)
            valid_pubkey = True
        except:
            print('\nSupplied Public Key is invalid.')

        if valid_pubkey:
            print('\nPublic Key accepted.')
            while True:
                comment = raw_input("\nPlease supply a comment for this key:\n")
                if not user['pubkeys'][comment]:
                    user['pubkeys'][comment] = pubkey
                else:
                    print("This comment is in use on another key")
                
    if key == '6':
        keynum = 0
        delkeys = []
        for comment,pubkey in user['pubkeys'].iteritems():
            delkeys.append(comment)
            print('%s - %s' % (keynum,comment))
            keynum = keynum + 1

        print('')
        print('Press the number of the key you wish to delete')
        print('')
        print('Press [Enter] To return to Main Menu')
        delkey = getch()
        print('delkey',delkey)
        if key == '\r': # <Enter>
            main_menu()
        if int(delkey) >= 0 and int(delkey) <= keynum:
            print delkeys[int(delkey)]
            del user['pubkeys'][delkeys[int(delkey)]]
            print('Key Deleted: %s' % delkeys[int(delkey)])
            print('')
            print('Press [Enter] To return to Main Menu')

    if key == '7':
        break;
